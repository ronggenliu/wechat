<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:p="http://www.springframework.org/schema/p"
     xmlns:tool="http://www.springframework.org/schema/tool"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
				http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">
				
	 
	  <bean id="jdbcDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		  <property name="driverClassName" value="${jdbc.driverClassName}" />
		    <property name="url" value="${jdbc.url}" />
		    <property name="username" value="${jdbc.username}" />
		    <property name="password" value="${jdbc.password}" />
		    <!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="20" />
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="10" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />

		<!-- <property name="poolPreparedStatements" value="true" /> <property name="maxPoolPreparedStatementPerConnectionSize" value="33" /> -->

		<property name="validationQuery" value="${validationQuery}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />
		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
		<property name="filters" value="mergeStat" />
	</bean> 
	
	 
	 <bean id="sqlSessionFactory" name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
		     <!--dataSource属性指定要用到的连接池--> 
		     <property name="dataSource" ref="jdbcDataSource"/> 
		     <!-- <property name="configLocation" value="classpath:Configuration.xml" /> -->
		     <!-- 所有配置的mapper.xml文件 -->
     		<property name="mapperLocations">
     			<list>
     				<value>classpath*:mapperConfig/sys/*.xml</value>
     				<value>classpath*:mapperConfig/busi/*.xml</value>
     				<value>classpath*:mapperConfig/wechat/*.xml</value>
     			</list>
     		</property>
     		<property name="typeAliasesPackage" value="org.wechat.webapp.sys.model,
                                      org.wechat.core.model,
                                      org.wechat.sys.model,
                                      org.wechat.webapp.busi.model" /> 
 	 </bean>
 	 
 	 <bean id="baseMapper" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    		 <property name="basePackage" value="org.wechat.webapp.sys.mapper,
    		 							org.wechat.core.mapper,
    		 							org.wechat.sys.mapper,
    		 							org.wechat.webapp.busi.mapper" /> 
    		  <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
 	 </bean>  
 	 
 	 
 	 
 	 
 	 <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
 	 		<property name="dataSource" ref="jdbcDataSource"/>
 	 </bean>
 	 <!-- 注解方式配置事物 -->  
    <!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->  
  
    <!-- 拦截器方式配置事物 -->  
    <tx:advice id="sysTransactionAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
            <tx:method name="count*" propagation="REQUIRED" />  
            <tx:method name="update*" propagation="REQUIRED" />  
            <tx:method name="delete*" propagation="REQUIRED" />  
            <tx:method name="insert*" propagation="REQUIRED" /> 
            <tx:method name="select*" propagation="REQUIRED" />  
            <tx:method name="find*" propagation="REQUIRED" />  
            <tx:method name="get*" propagation="REQUIRED" />  
            <tx:method name="query*" propagation="REQUIRED" />  
            <tx:method name="fetch*" propagation="REQUIRED" /> 
            <tx:method name="*" propagation="SUPPORTS" />  
        </tx:attributes>  
    </tx:advice>  
    
    <aop:config>  
       <aop:pointcut id="transactionPointcut" expression="execution(* org.wechat.*.service.*.*(..))" />
      <!-- 	<aop:pointcut id="sysTransactionPointcut" expression="execution(* org.wechat.sys.*.service.*.*(..))" /> 
      	<aop:pointcut id="sysTransactionPointcut" expression="execution(* org.wechat.webapp.*.service.*.*(..))" />  
        <aop:advisor pointcut-ref="sysTransactionPointcut" advice-ref="sysTransactionAdvice" />  -->
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="sysTransactionAdvice" />  
    </aop:config>
    
 	 
 	 
 	 
	 </beans>
	 
	 
	 